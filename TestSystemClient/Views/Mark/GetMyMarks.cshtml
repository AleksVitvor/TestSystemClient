@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "GetMyMarks";
}

<h1>My marks</h1>

<hr />
<div class="row">
    @(Html.Kendo().Grid<DtoModels.Mark.MyMarkDto>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.TestName);
        columns.Bound(p => p.Mark).Width(100);
    })
    .ToolBar(tools => tools.Pdf())
        .Pdf(pdf => pdf
            .AllPages()
            .AvoidLinks()
            .PaperSize("A4")
            .Margin("2cm", "1cm", "1cm", "1cm")
            .Landscape()
            .RepeatHeaders()
            .TemplateId("page-template")
            .FileName($"{DateTime.Now}.pdf")
        )
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.TestName))
        .Read(read => read.Action("ReadMyMarks", "Mark"))
    )
)
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
</div>

<form asp-controller="Test" asp-action="Tests" method="get">
    <div>
        <input type="submit" value="Back to tests" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}