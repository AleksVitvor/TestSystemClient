@model DtoModels.RequestModels.Test.TestRequestedModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit test</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TestId" class="control-label"></label>
                <input asp-for="TestId" class="form-control" readonly/>
                <span asp-validation-for="TestId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TestName" class="control-label"></label>
                <input asp-for="TestName" class="form-control" />
                <span asp-validation-for="TestName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Creator" class="control-label"></label>
                <input asp-for="Creator" class="form-control" readonly/>
                <span asp-validation-for="Creator" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<form asp-controller="Test" asp-action="Tests" method="get">
    <div>
        <input type="submit" value="Back to tests" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
